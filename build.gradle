plugins {
    id 'java-library'
    id 'org.jetbrains.intellij' version '1.17.4'
    id 'org.jetbrains.kotlin.jvm' version "1.9.25"
}

group = "com.kun.plugin"
version = "0.0.1"

repositories {
    mavenLocal()
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.aliyun.com/repository/jcenter' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    maven { url 'https://maven.aliyun.com/repository/public' }
    mavenCentral()
}

dependencies {
    runtimeOnly 'com.h2database:h2:2.2.224'
    api 'cn.edu.hfut.dmic.webcollector:WebCollector:2.73-alpha'
    api 'us.codecraft:webmagic-core:0.7.3'
    api 'us.codecraft:webmagic-extension:0.7.3'


//    api 'com.alibaba:fastjson:1.2.47'
//    api 'org.jsoup:jsoup:1.11.3'
//    api('io.sentry:sentry:1.7.9') {
//        exclude module: 'slf4j-api'
//    }
//    api 'org.scilab.forge:jlatexmath:1.0.7'
//    api 'com.vladsch.flexmark:flexmark:0.62.2'
//    api 'com.vladsch.flexmark:flexmark-ext-attributes:0.62.2'
//    api 'io.github.biezhi:TinyPinyin:2.0.3.RELEASE'
//    //api fileTree(dir: 'src/main/resources/lib', include: ['*.jar'])

}

// Configure Gradle IntelliJ Plugin
// Read more: https://plugins.jetbrains.com/docs/intellij/tools-gradle-intellij-plugin.html
intellij {
    pluginName = project.pluginName
    version = "2022.2"
    type = "IU"
    downloadSources = true
    updateSinceUntilBuild = false
    buildSearchableOptions.enabled = false
    ideaDependencyCachePath = "$gradle.gradleUserHomeDir/caches/modules-2/files-2.1/com.jetbrains.intellij.idea"

    runIde {
        jvmArgs = project.runIdeJvmArgs?.split(',')?.toList()?:[]
    }

    patchPluginXml {
        sinceBuild = "203.0"
        untilBuild = "242.*"
        pluginDescription = new File(project.pluginDescription).getText('UTF-8')
    }

    signPlugin {
        certificateChain = System.getenv("CERTIFICATE_CHAIN")
        privateKey = System.getenv("PRIVATE_KEY")
        password = System.getenv("PRIVATE_KEY_PASSWORD")
    }

    publishPlugin {
        token = System.getenv("PUBLISH_TOKEN")
    }


}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    sourceCompatibility = "11"
    targetCompatibility = "11"
}
